{"id":1236869908,"question_id":203,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713558838,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1236869908/","is_pending":"Not Pending","title":"Remove Linked List Elements","memory":"45.8 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\n\npublic class Solution {\n    public ListNode removeElements(ListNode head, int val) {\n        // Handle empty list\n        if (head == null) {\n            return null;\n        }\n\n        // Handle removing the head node\n        while (head != null && head.val == val) {\n            head = head.next;\n        }\n\n        // Iterate through the list and remove matching nodes\n        ListNode current = head;\n        ListNode prev = null;\n        while (current != null) {\n            if (current.val == val) {\n                // If removing the head, update head pointer\n                if (prev == null) {\n                    head = current.next;\n                } else {\n                    prev.next = current.next;\n                }\n            } else {\n                prev = current;\n            }\n            current = current.next;\n        }\n\n        return head;\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-linked-list-elements","has_notes":false,"flag_type":1}