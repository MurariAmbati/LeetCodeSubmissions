{"id":1260122823,"question_id":1087,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715912698,"status":10,"status_display":"Accepted","runtime":"414 ms","url":"/submissions/detail/1260122823/","is_pending":"Not Pending","title":"Longest Arithmetic Subsequence","memory":"64.4 MB","code":"import java.util.*;\n\nclass Solution {\n    public int longestArithSeqLength(int[] nums) {\n        int n = nums.length;\n        int maxLen = 0;\n        HashMap<Integer, Integer>[] dp = new HashMap[n];\n        \n        for (int i = 0; i < n; i++) {\n            dp[i] = new HashMap<>();\n            for (int j = 0; j < i; j++) {\n                int diff = nums[i] - nums[j];\n                int len = dp[j].getOrDefault(diff, 1) + 1;\n                dp[i].put(diff, len);\n                maxLen = Math.max(maxLen, len);\n            }\n        }\n        \n        return maxLen;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-arithmetic-subsequence","has_notes":false,"flag_type":1}