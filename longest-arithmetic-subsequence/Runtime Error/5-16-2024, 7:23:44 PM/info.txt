{"id":1260070785,"question_id":1087,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715905424,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1260070785/","is_pending":"Not Pending","title":"Longest Arithmetic Subsequence","memory":"N/A","code":"public class Solution {\n    public int longestArithSeqLength(int[] nums) {\n        int n = nums.length;\n        int[][] dp = new int[n][n]; // dp[i][j] stores the length of the longest arithmetic subsequence ending at nums[i] with common difference nums[j] - nums[i]\n        int maxLength = 2; // Minimum length of the subsequence is 2\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                int diff = nums[i] - nums[j]; // Calculate the common difference\n                dp[i][diff] = Math.max(dp[i][diff], dp[j][diff] + 1); // Update the length of the subsequence\n                maxLength = Math.max(maxLength, dp[i][diff]); // Update the maximum length\n            }\n        }\n        \n        return maxLength;\n    }\n}","compare_result":"00000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-arithmetic-subsequence","has_notes":false,"flag_type":1}