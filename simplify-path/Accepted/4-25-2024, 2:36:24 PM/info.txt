{"id":1241954791,"question_id":71,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1714073784,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1241954791/","is_pending":"Not Pending","title":"Simplify Path","memory":"43.1 MB","code":"import java.util.Stack;\n\npublic class Solution {\n    public String simplifyPath(String path) {\n        Stack<String> stack = new Stack<>();\n\n        // Split the path by '/'\n        String[] dirs = path.split(\"/\");\n\n        // Process each directory\n        for (String dir : dirs) {\n            if (dir.equals(\"..\")) {\n                // Go one level up\n                if (!stack.isEmpty()) {\n                    stack.pop();\n                }\n            } else if (!dir.equals(\".\") && !dir.isEmpty()) {\n                // Ignore '.' and empty strings\n                stack.push(dir);\n            }\n        }\n\n        // Construct the simplified canonical path\n        StringBuilder sb = new StringBuilder(\"/\");\n        for (String dir : stack) {\n            sb.append(dir).append(\"/\");\n        }\n\n        // Remove the trailing '/'\n        if (sb.length() > 1) {\n            sb.setLength(sb.length() - 1);\n        }\n\n        return sb.toString();\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"simplify-path","has_notes":false,"flag_type":1}