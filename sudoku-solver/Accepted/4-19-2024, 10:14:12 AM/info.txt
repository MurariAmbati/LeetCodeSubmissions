{"id":1236650089,"question_id":37,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713539652,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1236650089/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"40.9 MB","code":"class Solution {\n    public void solveSudoku(char[][] board) {\n        solve(board, 0, 0);\n    }\n\n    private boolean solve(char[][] board, int row, int col) {\n        if (col == board[0].length) {\n            return solve(board, row + 1, 0); // Move to next row\n        }\n        if (row == board.length) {\n            return true; // Reached end, Sudoku solved\n        }\n\n        if (board[row][col] != '.') {\n            return solve(board, row, col + 1); // Skip filled cells\n        }\n\n        for (char num = '1'; num <= '9'; num++) {\n            if (isValid(board, row, col, num)) {\n                board[row][col] = num;\n                if (solve(board, row, col + 1)) {\n                    return true; // Found solution with this placement\n                }\n                board[row][col] = '.'; // Backtrack if placement doesn't lead to solution\n            }\n        }\n        return false; // No valid placement found in this cell\n    }\n\n    private boolean isValid(char[][] board, int row, int col, char num) {\n        // Check row\n        for (int i = 0; i < board[0].length; i++) {\n            if (board[row][i] == num && i != col) {\n                return false;\n            }\n        }\n\n        // Check column\n        for (int i = 0; i < board.length; i++) {\n            if (board[i][col] == num && i != row) {\n                return false;\n            }\n        }\n\n        // Check sub-box\n        int boxStartRow = (row / 3) * 3;\n        int boxStartCol = (col / 3) * 3;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (board[boxStartRow + i][boxStartCol + j] == num &&\n                        (boxStartRow + i != row || boxStartCol + j != col)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}\n","compare_result":"111111","title_slug":"sudoku-solver","has_notes":false,"flag_type":1}