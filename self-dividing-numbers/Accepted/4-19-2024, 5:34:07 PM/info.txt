{"id":1236921458,"question_id":728,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713566047,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1236921458/","is_pending":"Not Pending","title":"Self Dividing Numbers","memory":"41 MB","code":"import java.util.ArrayList;\nimport java.util.List;\n\npublic class Solution {\n    public List<Integer> selfDividingNumbers(int left, int right) {\n        List<Integer> result = new ArrayList<>();\n        \n        for (int num = left; num <= right; num++) {\n            if (isSelfDividing(num)) {\n                result.add(num);\n            }\n        }\n        \n        return result;\n    }\n    \n    private boolean isSelfDividing(int num) {\n        int originalNum = num;\n        \n        while (num > 0) {\n            int digit = num % 10;\n            if (digit == 0 || originalNum % digit != 0) {\n                return false;\n            }\n            num /= 10;\n        }\n        \n        return true;\n    }\n\n}","compare_result":"1111111111111111111111111111111","title_slug":"self-dividing-numbers","has_notes":false,"flag_type":1}