{"id":1273448048,"question_id":447,"lang":"java","lang_name":"Java","time":"1 hour, 16 minutes","timestamp":1717172913,"status":10,"status_display":"Accepted","runtime":"129 ms","url":"/submissions/detail/1273448048/","is_pending":"Not Pending","title":"Number of Boomerangs","memory":"44.3 MB","code":"import java.util.HashMap;\n\npublic class Solution {\n    public int numberOfBoomerangs(int[][] points) {\n        int count = 0;\n        // Iterate through each point in the input\n        for (int[] p : points) {\n            // Create a hashmap to store distances\n            HashMap<Integer, Integer> map = new HashMap<>();\n            // Iterate through each other point\n            for (int[] q : points) {\n                // Calculate distance between p and q\n                int distance = (p[0] - q[0]) * (p[0] - q[0]) + (p[1] - q[1]) * (p[1] - q[1]);\n                // Update the count for this distance in the hashmap\n                map.put(distance, map.getOrDefault(distance, 0) + 1);\n            }\n            // Iterate through the distances in the hashmap\n            for (int dist : map.values()) {\n                // For each distance, add the count of boomerangs\n                // originating from this point to the total count\n                count += dist * (dist - 1);\n            }\n        }\n        return count;\n    }\n}","compare_result":"11111111111111111111111111111111","title_slug":"number-of-boomerangs","has_notes":false,"flag_type":1}