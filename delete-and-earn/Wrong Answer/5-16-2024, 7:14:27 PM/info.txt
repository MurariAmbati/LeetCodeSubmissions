{"id":1260066955,"question_id":740,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715904867,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1260066955/","is_pending":"Not Pending","title":"Delete and Earn","memory":"N/A","code":"import java.util.HashMap;\nimport java.util.Map;\n\npublic class Solution {\n    public int deleteAndEarn(int[] nums) {\n        // Count the frequency of each number\n        Map<Integer, Integer> freqMap = new HashMap<>();\n        for (int num : nums) {\n            freqMap.put(num, freqMap.getOrDefault(num, 0) + 1);\n        }\n        \n        // Initialize variables for the previous number and points earned by skipping and taking the current number\n        int prev = -1, skip = 0, take = 0;\n        \n        // Iterate through each unique number in ascending order\n        for (int num : freqMap.keySet()) {\n            // Compute the maximum points by considering two cases: deleting the current number or skipping it\n            int maxPoints = Math.max(skip, take);\n            \n            // If the current number is adjacent to the previous number, update skip and take accordingly\n            if (num - 1 != prev) {\n                take = num * freqMap.get(num) + maxPoints;\n                skip = maxPoints;\n            } else {\n                take = num * freqMap.get(num) + skip;\n                skip = maxPoints;\n            }\n            \n            // Update the previous number\n            prev = num;\n        }\n        \n        // Return the maximum points earned\n        return Math.max(skip, take);\n    }\n}","compare_result":"111111111101111111111111111111111111111111111111111","title_slug":"delete-and-earn","has_notes":false,"flag_type":1}