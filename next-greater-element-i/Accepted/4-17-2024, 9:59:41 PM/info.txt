{"id":1235376023,"question_id":496,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713409181,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1235376023/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"44.3 MB","code":"\n\nclass Solution {\n    public int[] nextGreaterElement(int[] nums1, int[] nums2) {\n        Map<Integer, Integer> nextGreaterMap = new HashMap<>();\n        Deque<Integer> stack = new ArrayDeque<>();\n\n        // Iterate through nums2 from right to left\n        for (int i = nums2.length - 1; i >= 0; i--) {\n            while (!stack.isEmpty() && stack.peek() < nums2[i]) {\n                stack.pop();\n            }\n            nextGreaterMap.put(nums2[i], stack.isEmpty() ? -1 : stack.peek());\n            stack.push(nums2[i]);\n        }\n\n        // Find next greater elements for each element in nums1\n        int[] result = new int[nums1.length];\n        for (int i = 0; i < nums1.length; i++) {\n            result[i] = nextGreaterMap.get(nums1[i]);\n        }\n\n        return result;\n    }\n}","compare_result":"1111111111111111","title_slug":"next-greater-element-i","has_notes":false,"flag_type":1}