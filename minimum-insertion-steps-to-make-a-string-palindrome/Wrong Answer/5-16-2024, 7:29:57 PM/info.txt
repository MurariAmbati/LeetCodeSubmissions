{"id":1260073359,"question_id":1437,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715905797,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1260073359/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"N/A","code":"public class Solution {\n    public int minInsertions(String s) {\n        int n = s.length();\n        int[][] dp = new int[n + 1][n + 1];\n        \n        for (int i = 0; i < n; i++) {\n            for (int j = i - 1; j >= 0; j--) {\n                if (s.charAt(i) == s.charAt(j)) {\n                    dp[i + 1][j + 1] = dp[i][j];\n                } else {\n                    dp[i + 1][j + 1] = Math.min(dp[i][j + 1], dp[i + 1][j]) + 1;\n                }\n            }\n        }\n        \n        return dp[n][n];\n    }\n\n}","compare_result":"1001000000010000101101000010000101100010001000000000100100","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}