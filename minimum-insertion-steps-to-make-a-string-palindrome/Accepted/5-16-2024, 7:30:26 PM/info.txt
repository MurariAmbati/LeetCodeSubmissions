{"id":1260073573,"question_id":1437,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715905826,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/1260073573/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"45.7 MB","code":"public class Solution {\n    public int minInsertions(String s) {\n        int n = s.length();\n        int[][] dp = new int[n][n];\n        \n        for (int len = 2; len <= n; len++) {\n            for (int i = 0; i <= n - len; i++) {\n                int j = i + len - 1;\n                if (s.charAt(i) == s.charAt(j)) {\n                    dp[i][j] = dp[i + 1][j - 1];\n                } else {\n                    dp[i][j] = Math.min(dp[i + 1][j], dp[i][j - 1]) + 1;\n                }\n            }\n        }\n        \n        return dp[0][n - 1];\n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}