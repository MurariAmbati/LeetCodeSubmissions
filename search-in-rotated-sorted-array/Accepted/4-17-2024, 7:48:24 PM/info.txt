{"id":1235317300,"question_id":33,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713401304,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235317300/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"42.1 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int left = 0, right = nums.length - 1;\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target) {\n                return mid;\n            }\n            if (nums[left] <= nums[mid]) {  // Left half sorted\n                if (target >= nums[left] && target < nums[mid]) {\n                    right = mid - 1;\n                } else {\n                    left = mid + 1;\n                }\n            } else {  // Right half sorted\n                if (target > nums[mid] && target <= nums[right]) {\n                    left = mid + 1;\n                } else {\n                    right = mid - 1;\n                }\n            }\n        }\n        return -1;\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}