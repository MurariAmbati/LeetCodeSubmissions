{"id":1260066418,"question_id":747,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715904785,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1260066418/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"43.6 MB","code":"public class Solution {\n    public int minCostClimbingStairs(int[] cost) {\n        int n = cost.length;\n        \n        // Base cases\n        int[] dp = new int[n];\n        dp[0] = cost[0];\n        dp[1] = cost[1];\n        \n        // Compute minimum cost for each step\n        for (int i = 2; i < n; i++) {\n            dp[i] = Math.min(dp[i - 1], dp[i - 2]) + cost[i];\n        }\n        \n        // Return minimum cost of reaching the top floor\n        return Math.min(dp[n - 1], dp[n - 2]);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs","has_notes":false,"flag_type":1}