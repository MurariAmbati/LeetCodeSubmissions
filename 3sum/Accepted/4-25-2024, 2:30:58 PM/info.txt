{"id":1241951187,"question_id":15,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1714073458,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/1241951187/","is_pending":"Not Pending","title":"3Sum","memory":"51.5 MB","code":"public class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        Set<List<Integer>> result = new HashSet<>();\n        Arrays.sort(nums);  // Sort the array for efficient lookups\n\n        for (int i = 0; i < nums.length - 2; i++) {\n            if (i > 0 && nums[i] == nums[i - 1]) { // Skip duplicate elements (i)\n                continue;\n            }\n            int target = -nums[i];\n            int low = i + 1;\n            int high = nums.length - 1;\n\n            while (low < high) {\n                int sum = nums[low] + nums[high];\n                if (sum == target) {\n                    result.add(Arrays.asList(nums[i], nums[low], nums[high]));\n                    low++;\n                    high--;\n                } else if (sum < target) {\n                    low++;\n                } else {\n                    high--;\n                }\n            }\n        }\n\n        return new ArrayList<>(result);\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}