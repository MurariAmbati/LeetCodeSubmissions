{"id":1235305133,"question_id":141,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713399514,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235305133/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"43.8 MB","code":"class Solution {\n    public boolean hasCycle(ListNode head) {\n        ListNode slow = head, fast = head;\n        while (fast != null && fast.next != null) {\n            slow = slow.next;\n            fast = fast.next.next;\n            if (slow == fast) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","compare_result":"11111111111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}