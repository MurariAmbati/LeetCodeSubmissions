{"id":1235212844,"question_id":11,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713385900,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1235212844/","is_pending":"Not Pending","title":"Container With Most Water","memory":"57.2 MB","code":"class Solution {\n    public int maxArea(int[] height) {\n        int left = 0;\n        int right = height.length - 1;\n        int maxArea = 0;\n\n        while (left < right) {\n            // Calculate the width of the container\n            int width = right - left;\n\n            // Get the minimum height between the left and right lines\n            int minHeight = Math.min(height[left], height[right]);\n\n            // Calculate the current container area\n            int currentArea = width * minHeight;\n\n            // Update the maximum area if necessary\n            maxArea = Math.max(maxArea, currentArea);\n\n            // Move the shorter line towards the center\n            if (height[left] < height[right]) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n\n        return maxArea;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"container-with-most-water","has_notes":false,"flag_type":1}