{"id":1273436545,"question_id":32,"lang":"java","lang_name":"Java","time":"1 hour, 31 minutes","timestamp":1717172025,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1273436545/","is_pending":"Not Pending","title":"Longest Valid Parentheses","memory":"42.2 MB","code":"public class Solution {\n    public int longestValidParentheses(String s) {\n        int maxLength = 0;\n        int[] dp = new int[s.length()];\n        \n        for (int i = 1; i < s.length(); i++) {\n            if (s.charAt(i) == ')') {\n                if (s.charAt(i - 1) == '(') {\n                    dp[i] = (i >= 2 ? dp[i - 2] : 0) + 2;\n                } else if (i - dp[i - 1] > 0 && s.charAt(i - dp[i - 1] - 1) == '(') {\n                    dp[i] = dp[i - 1] + ((i - dp[i - 1] >= 2) ? dp[i - dp[i - 1] - 2] : 0) + 2;\n                }\n                maxLength = Math.max(maxLength, dp[i]);\n            }\n        }\n        \n        return maxLength;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-valid-parentheses","has_notes":false,"flag_type":1}