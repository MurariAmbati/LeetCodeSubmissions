{"id":1235377813,"question_id":507,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713409390,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1235377813/","is_pending":"Not Pending","title":"Perfect Number","memory":"40.3 MB","code":"class Solution {\n    public boolean checkPerfectNumber(int num) {\n        if (num <= 1) {\n            return false;\n        }\n        \n        int sum = 1; // 1 is always a divisor\n        \n        // Iterate from 2 to square root of num\n        for (int i = 2; i * i <= num; i++) {\n            if (num % i == 0) {\n                sum += i;\n                if (i * i != num) { // Add the other divisor if it's not equal to the square root\n                    sum += num / i;\n                }\n            }\n        }\n        \n        // Check if the sum of divisors equals num\n        return sum == num;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"perfect-number","has_notes":false,"flag_type":1}