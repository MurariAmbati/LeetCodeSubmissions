{"id":1273441589,"question_id":65,"lang":"java","lang_name":"Java","time":"1 hour, 24 minutes","timestamp":1717172422,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1273441589/","is_pending":"Not Pending","title":"Valid Number","memory":"N/A","code":"public class Solution {\n    public boolean isNumber(String s) {\n        // Trim the string to remove leading and trailing whitespaces\n        s = s.trim();\n        \n        // Check if the string is empty after trimming\n        if (s.length() == 0) {\n            return false;\n        }\n        \n        // Split the string into base and exponent parts if an exponent is present\n        int eIndex = Math.max(s.indexOf('e'), s.indexOf('E'));\n        if (eIndex != -1) {\n            String base = s.substring(0, eIndex);\n            String exponent = s.substring(eIndex + 1);\n            return isValidBase(base) && isValidExponent(exponent);\n        } else {\n            return isValidBase(s);\n        }\n    }\n    \n    private boolean isValidBase(String s) {\n        // Check if the base contains a dot\n        int dotIndex = s.indexOf('.');\n        if (dotIndex != -1) {\n            String left = s.substring(0, dotIndex);\n            String right = s.substring(dotIndex + 1);\n            return (isValidInteger(left, true) || left.isEmpty()) && (isValidInteger(right, false) || right.isEmpty());\n        } else {\n            return isValidInteger(s, true);\n        }\n    }\n    \n    private boolean isValidExponent(String s) {\n        // Check if the exponent is a valid integer (with an optional sign)\n        return isValidInteger(s, true);\n    }\n    \n    private boolean isValidInteger(String s, boolean allowSign) {\n        if (s.length() == 0) {\n            return false;\n        }\n        int start = 0;\n        if (allowSign && (s.charAt(0) == '+' || s.charAt(0) == '-')) {\n            start = 1;\n        }\n        if (start == s.length()) {\n            return false;\n        }\n        for (int i = start; i < s.length(); i++) {\n            if (!Character.isDigit(s.charAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","compare_resulttitle_slug":"valid-number","has_notes":false,"flag_type":1}