{"id":1235308537,"question_id":190,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713400011,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235308537/","is_pending":"Not Pending","title":"Reverse Bits","memory":"41.6 MB","code":"public class Solution {\n    // you need treat n as an unsigned value\n    public int reverseBits(int n) {\n        int reversed = 0;\n        for (int i = 0; i < 32; i++) {\n            // Get the rightmost bit of n (treated as unsigned)\n            int bit = (n >> i) & 1;\n            // Shift the reversed number left by 1 and add the current bit\n            reversed = reversed << 1 | bit;\n        }\n        return reversed;\n    }\n}\n","compare_resulttitle_slug":"reverse-bits","has_notes":false,"flag_type":1}