{"id":1235303331,"question_id":118,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713399255,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1235303331/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"41.8 MB","code":"class Solution {\n    public List<List<Integer>> generate(int numRows) {\n        List<List<Integer>> pascalTriangle = new ArrayList<>();\n        \n        // Base case: First row is always [1]\n        pascalTriangle.add(Collections.singletonList(1));\n\n        // Iterate for remaining rows\n        for (int i = 1; i < numRows; i++) {\n            List<Integer> previousRow = pascalTriangle.get(i - 1);\n            List<Integer> currentRow = new ArrayList<>();\n            \n            // First element is always 1\n            currentRow.add(1);\n            \n            // Middle elements are sum of elements above\n            for (int j = 1; j < i; j++) {\n                currentRow.add(previousRow.get(j - 1) + previousRow.get(j));\n            }\n            \n            // Last element is always 1\n            currentRow.add(1);\n            \n            pascalTriangle.add(currentRow);\n        }\n        \n        return pascalTriangle;\n    }\n}\n","compare_result":"111111111111111111111111111111","title_slug":"pascals-triangle","has_notes":false,"flag_type":1}