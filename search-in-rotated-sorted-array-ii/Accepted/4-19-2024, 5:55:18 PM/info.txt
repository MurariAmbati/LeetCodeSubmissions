{"id":1236928428,"question_id":81,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713567318,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1236928428/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"42.7 MB","code":"public class Solution {\n    public boolean search(int[] nums, int target) {\n        int left = 0, right = nums.length - 1;\n        while (left <= right) {\n            int mid = left + (right - left) / 2;\n            if (nums[mid] == target) {\n                return true;\n            } else if (nums[mid] < nums[right]) {\n                if (nums[mid] < target && target <= nums[right]) {\n                    left = mid + 1;\n                } else {\n                    right = mid - 1;\n                }\n            } else if (nums[mid] > nums[right]) {\n                if (nums[left] <= target && target < nums[mid]) {\n                    right = mid - 1;\n                } else {\n                    left = mid + 1;\n                }\n            } else {\n                // nums[mid] == nums[right], move right pointer to the left\n                right--;\n            }\n        }\n        return false;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false,"flag_type":1}