{"id":1235210630,"question_id":5,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713385662,"status":10,"status_display":"Accepted","runtime":"122 ms","url":"/submissions/detail/1235210630/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"46.3 MB","code":"class Solution {\n    public String longestPalindrome(String s) {\n        int n = s.length();\n        if (n < 2) {\n            return s;\n        }\n\n        // Create a boolean table to store dp[i][j] - Whether the substring s.substring(i, j + 1) is a palindrome\n        boolean[][] dp = new boolean[n][n];\n\n        // Base cases: Single characters are palindromes\n        for (int i = 0; i < n; i++) {\n            dp[i][i] = true;\n        }\n\n        // Length 2 substrings\n        int maxLen = 1;\n        int start = 0;\n        for (int i = 0; i < n - 1; i++) {\n            if (s.charAt(i) == s.charAt(i + 1)) {\n                dp[i][i + 1] = true;\n                maxLen = 2;\n                start = i;\n            }\n        }\n\n        // Length 3+ substrings\n        for (int k = 3; k <= n; k++) {\n            for (int i = 0; i <= n - k; i++) {\n                int j = i + k - 1;\n                if (s.charAt(i) == s.charAt(j) && dp[i + 1][j - 1]) {\n                    dp[i][j] = true;\n                    maxLen = k;\n                    start = i;\n                }\n            }\n        }\n\n        return s.substring(start, start + maxLen);\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}