{"id":1240369536,"question_id":229,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713925033,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1240369536/","is_pending":"Not Pending","title":"Majority Element II","memory":"48.1 MB","code":"import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<Integer> majorityElement(int[] nums) {\n        List<Integer> result = new ArrayList<>();\n        \n        // Initialize candidates and their counts\n        int candidate1 = Integer.MIN_VALUE, candidate2 = Integer.MIN_VALUE;\n        int count1 = 0, count2 = 0;\n        \n        // Step 1: Find the candidates\n        for (int num : nums) {\n            if (num == candidate1) {\n                count1++;\n            } else if (num == candidate2) {\n                count2++;\n            } else if (count1 == 0) {\n                candidate1 = num;\n                count1 = 1;\n            } else if (count2 == 0) {\n                candidate2 = num;\n                count2 = 1;\n            } else {\n                count1--;\n                count2--;\n            }\n        }\n        \n        // Step 2: Count the occurrences of the candidates\n        count1 = 0;\n        count2 = 0;\n        for (int num : nums) {\n            if (num == candidate1) {\n                count1++;\n            } else if (num == candidate2) {\n                count2++;\n            }\n        }\n        \n        // Step 3: Verify candidates\n        int n = nums.length;\n        if (count1 > n / 3) {\n            result.add(candidate1);\n        }\n        if (count2 > n / 3) {\n            result.add(candidate2);\n        }\n        \n        return result;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"majority-element-ii","has_notes":false,"flag_type":1}