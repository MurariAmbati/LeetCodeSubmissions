{"id":1238692477,"question_id":919,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713754091,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1238692477/","is_pending":"Not Pending","title":"Projection Area of 3D Shapes","memory":"44.2 MB","code":"class Solution {\n    public int projectionArea(int[][] grid) {\n        int n = grid.length;\n        int xyProjection = 0;\n        int yzProjection = 0;\n        int zxProjection = 0;\n\n        // Calculate xyProjection (sum of maximum values in each row)\n        for (int i = 0; i < n; i++) {\n            int maxRow = 0;\n            for (int j = 0; j < n; j++) {\n                maxRow = Math.max(maxRow, grid[i][j]);\n                if (grid[i][j] > 0) zxProjection++; // Count non-zero values for zxProjection\n            }\n            xyProjection += maxRow;\n        }\n\n        // Calculate yzProjection (sum of maximum values in each column)\n        for (int j = 0; j < n; j++) {\n            int maxCol = 0;\n            for (int i = 0; i < n; i++) {\n                maxCol = Math.max(maxCol, grid[i][j]);\n            }\n            yzProjection += maxCol;\n        }\n\n        return xyProjection + yzProjection + zxProjection;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"projection-area-of-3d-shapes","has_notes":false,"flag_type":1}