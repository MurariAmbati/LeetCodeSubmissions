{"id":1235191350,"question_id":100,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713383667,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235191350/","is_pending":"Not Pending","title":"Same Tree","memory":"41.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n        // Base case: If both nodes are null, they are equal.\n        if (p == null && q == null) {\n            return true;\n        }\n        // If one of the nodes is null, they are not equal.\n        if (p == null || q == null) {\n            return false;\n        }\n        // Check if the values of the current nodes are equal.\n        if (p.val != q.val) {\n            return false;\n        }\n        // Recursively check left and right subtrees.\n        return isSameTree(p.left, q.left) && isSameTree(p.right, q.right);\n    }\n}\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}