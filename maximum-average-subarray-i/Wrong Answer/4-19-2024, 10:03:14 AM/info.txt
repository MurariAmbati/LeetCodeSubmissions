{"id":1236642809,"question_id":643,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713538994,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1236642809/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"N/A","code":"class Solution {\n    public double findMaxAverage(int[] nums, int k) {\n        if (nums.length == 0 || k == 0) {\n            return 0.0; // Handle empty array or k = 0\n        }\n        \n        double maxAverage = Double.MIN_VALUE;\n        double windowSum = 0.0;\n        for (int i = 0; i < nums.length; i++) {\n            windowSum += nums[i];\n            if (i >= k - 1) {\n                // Calculate average for the current window\n                double currentAverage = windowSum / k;\n                maxAverage = Math.max(maxAverage, currentAverage);\n                windowSum -= nums[i - k + 1]; // Slide window\n            }\n        }\n        return maxAverage;\n    }\n}\n","compare_result":"1110111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111011111101101011111101111111","title_slug":"maximum-average-subarray-i","has_notes":false,"flag_type":1}