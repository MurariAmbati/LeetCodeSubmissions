{"id":1236920602,"question_id":789,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713565904,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/1236920602/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"46.5 MB","code":"import java.util.PriorityQueue;\n\npublic class KthLargest {\n    private PriorityQueue<Integer> minHeap;\n    private int k;\n\n    public KthLargest(int k, int[] nums) {\n        this.k = k;\n        this.minHeap = new PriorityQueue<>();\n        for (int num : nums) {\n            add(num);\n        }\n    }\n\n    public int add(int val) {\n        minHeap.offer(val);\n        if (minHeap.size() > k) {\n            minHeap.poll();\n        }\n        return minHeap.peek();\n    }\n}\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest obj = new KthLargest(k, nums);\n * int param_1 = obj.add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}