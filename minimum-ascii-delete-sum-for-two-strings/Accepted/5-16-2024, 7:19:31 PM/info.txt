{"id":1260069017,"question_id":712,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715905171,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1260069017/","is_pending":"Not Pending","title":"Minimum ASCII Delete Sum for Two Strings","memory":"45 MB","code":"public class Solution {\n    public int minimumDeleteSum(String s1, String s2) {\n        int m = s1.length();\n        int n = s2.length();\n        \n        // Initialize dp array\n        int[][] dp = new int[m + 1][n + 1];\n        \n        // Fill up the dp array\n        for (int i = 1; i <= m; i++) {\n            dp[i][0] = dp[i - 1][0] + s1.charAt(i - 1);\n        }\n        for (int j = 1; j <= n; j++) {\n            dp[0][j] = dp[0][j - 1] + s2.charAt(j - 1);\n        }\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (s1.charAt(i - 1) == s2.charAt(j - 1)) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = Math.min(s1.charAt(i - 1) + dp[i - 1][j], s2.charAt(j - 1) + dp[i][j - 1]);\n                }\n            }\n        }\n        \n        // Return the lowest ASCII sum to make the two strings equal\n        return dp[m][n];\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-ascii-delete-sum-for-two-strings","has_notes":false,"flag_type":1}