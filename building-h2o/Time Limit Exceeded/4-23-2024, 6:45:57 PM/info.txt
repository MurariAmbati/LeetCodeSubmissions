{"id":1240300974,"question_id":1186,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713915957,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1240300974/","is_pending":"Not Pending","title":"Building H2O","memory":"N/A","code":"import java.util.concurrent.Semaphore;\n\nclass H2O {\n    private Semaphore hydrogenSemaphore;\n    private Semaphore oxygenSemaphore;\n    private Semaphore barrier;\n\n    public H2O() {\n        hydrogenSemaphore = new Semaphore(2); // Max 2 hydrogen atoms\n        oxygenSemaphore = new Semaphore(1);   // Max 1 oxygen atom\n        barrier = new Semaphore(0);           // Barrier to synchronize the threads\n    }\n\n    public void hydrogen(Runnable releaseHydrogen) throws InterruptedException {\n        hydrogenSemaphore.acquire();   // Wait for permission to release hydrogen\n        releaseHydrogen.run();         // Release hydrogen\n        barrier.acquire();             // Wait for oxygen thread to release barrier\n        hydrogenSemaphore.release();   // Release the hydrogen semaphore\n    }\n\n    public void oxygen(Runnable releaseOxygen) throws InterruptedException {\n        oxygenSemaphore.acquire();     // Wait for permission to release oxygen\n        releaseOxygen.run();           // Release oxygen\n        barrier.release(2);            // Signal two hydrogen threads to proceed\n        barrier.acquire(2);            // Wait for two hydrogen threads to complete\n        oxygenSemaphore.release();     // Release the oxygen semaphore\n    }\n}\n","compare_result":"00000000000","title_slug":"building-h2o","has_notes":false,"flag_type":1}