{"id":1235193392,"question_id":104,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713383864,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235193392/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"42.3 MB","code":"class Solution {\n    public int maxDepth(TreeNode root) {\n        if (root == null) {\n            return 0; // An empty tree has depth 0.\n        }\n        // Recursively compute the depth of the left and right subtrees.\n        int leftDepth = maxDepth(root.left);\n        int rightDepth = maxDepth(root.right);\n        // Return the maximum depth among the left and right subtrees, plus 1 for the current node.\n        return Math.max(leftDepth, rightDepth) + 1;\n    }\n}\n","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}