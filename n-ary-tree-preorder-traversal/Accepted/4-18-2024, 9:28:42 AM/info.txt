{"id":1235790721,"question_id":775,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713450522,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1235790721/","is_pending":"Not Pending","title":"N-ary Tree Preorder Traversal","memory":"44.7 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\npublic class Solution {\n    public List<Integer> preorder(Node root) {\n        List<Integer> result = new ArrayList<>();\n        if (root == null) {\n            return result;\n        }\n        \n        Stack<Node> stack = new Stack<>();\n        stack.push(root);\n        \n        while (!stack.isEmpty()) {\n            Node node = stack.pop();\n            result.add(node.val);\n            \n            // Push children onto the stack in reverse order\n            for (int i = node.children.size() - 1; i >= 0; i--) {\n                stack.push(node.children.get(i));\n            }\n        }\n        \n        return result;\n    }\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"n-ary-tree-preorder-traversal","has_notes":false,"flag_type":1}