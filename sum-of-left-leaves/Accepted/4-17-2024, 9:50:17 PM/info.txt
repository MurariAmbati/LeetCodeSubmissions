{"id":1235371341,"question_id":404,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713408617,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235371341/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"41.4 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int sumOfLeftLeaves(TreeNode root) {\n        return dfs(root, false);\n    }\n    \n    private int dfs(TreeNode node, boolean isLeft) {\n        if (node == null) {\n            return 0;\n        }\n        if (node.left == null && node.right == null && isLeft) {\n            return node.val;\n        }\n        return dfs(node.left, true) + dfs(node.right, false);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}