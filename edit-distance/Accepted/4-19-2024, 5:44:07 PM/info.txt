{"id":1236924670,"question_id":72,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713566647,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1236924670/","is_pending":"Not Pending","title":"Edit Distance","memory":"44.9 MB","code":"public class Solution {\n    public int minDistance(String word1, String word2) {\n        int m = word1.length();\n        int n = word2.length();\n        \n        // Create a 2D array to store the minimum number of operations required\n        int[][] dp = new int[m + 1][n + 1];\n        \n        // Initialize the base cases\n        for (int i = 0; i <= m; i++) {\n            dp[i][0] = i; // Operations required to convert word1[0...i-1] to an empty string\n        }\n        for (int j = 0; j <= n; j++) {\n            dp[0][j] = j; // Operations required to convert an empty string to word2[0...j-1]\n        }\n        \n        // Fill the dp array iteratively\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (word1.charAt(i - 1) == word2.charAt(j - 1)) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = 1 + Math.min(Math.min(dp[i][j - 1], dp[i - 1][j]), dp[i - 1][j - 1]);\n                }\n            }\n        }\n        \n        // Return the minimum number of operations required to convert word1 to word2\n        return dp[m][n];\n    }\n}","compare_resulttitle_slug":"edit-distance","has_notes":false,"flag_type":1}