{"id":1260066735,"question_id":198,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715904834,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1260066735/","is_pending":"Not Pending","title":"House Robber","memory":"41.2 MB","code":"public class Solution {\n    public int rob(int[] nums) {\n        int n = nums.length;\n        \n        if (n == 0) return 0;\n        if (n == 1) return nums[0];\n        \n        // Initialize dp array\n        int[] dp = new int[n];\n        dp[0] = nums[0];\n        dp[1] = Math.max(nums[0], nums[1]);\n        \n        // Compute dp values\n        for (int i = 2; i < n; i++) {\n            dp[i] = Math.max(dp[i - 1], dp[i - 2] + nums[i]);\n        }\n        \n        // Return the maximum amount of money that can be robbed\n        return dp[n - 1];\n    }\n\n    public static void main(String[] args) {\n        Solution solution = new Solution();\n        int[] nums1 = {1, 2, 3, 1};\n        System.out.println(solution.rob(nums1)); // Output: 4\n        \n        int[] nums2 = {2, 7, 9, 3, 1};\n        System.out.println(solution.rob(nums2)); // Output: 12\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"house-robber","has_notes":false,"flag_type":1}