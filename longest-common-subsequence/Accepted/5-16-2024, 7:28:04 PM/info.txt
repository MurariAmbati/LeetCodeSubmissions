{"id":1260072585,"question_id":1250,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715905684,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1260072585/","is_pending":"Not Pending","title":"Longest Common Subsequence","memory":"50.7 MB","code":"public class Solution {\n    public int longestCommonSubsequence(String text1, String text2) {\n        int m = text1.length(), n = text2.length();\n        int[][] dp = new int[m + 1][n + 1];\n        \n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (text1.charAt(i - 1) == text2.charAt(j - 1)) {\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                } else {\n                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        \n        return dp[m][n];\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"longest-common-subsequence","has_notes":false,"flag_type":1}