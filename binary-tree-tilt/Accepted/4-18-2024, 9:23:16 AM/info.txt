{"id":1235786909,"question_id":563,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713450196,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235786909/","is_pending":"Not Pending","title":"Binary Tree Tilt","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int tiltSum = 0;\n    \n    public int findTilt(TreeNode root) {\n        postOrder(root);\n        return tiltSum;\n    }\n    \n    private int postOrder(TreeNode node) {\n        if (node == null) {\n            return 0;\n        }\n        \n        // Calculate the sum of left subtree and right subtree\n        int leftSum = postOrder(node.left);\n        int rightSum = postOrder(node.right);\n        \n        // Calculate the tilt of the current node and update the tiltSum\n        tiltSum += Math.abs(leftSum - rightSum);\n        \n        // Return the sum of values of the current subtree rooted at 'node'\n        return leftSum + rightSum + node.val;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-tilt","has_notes":false,"flag_type":1}