{"id":1260070431,"question_id":1330,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715905373,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/1260070431/","is_pending":"Not Pending","title":"Longest Arithmetic Subsequence of Given Difference","memory":"57.8 MB","code":"import java.util.HashMap;\nimport java.util.Map;\n\npublic class Solution {\n    public int longestSubsequence(int[] arr, int difference) {\n        Map<Integer, Integer> dp = new HashMap<>();\n        int maxLength = 1; // Minimum length of the subsequence is 1\n        \n        for (int num : arr) {\n            int prev = num - difference;\n            int length = dp.getOrDefault(prev, 0) + 1; // Length of subsequence ending at num\n            \n            dp.put(num, length);\n            maxLength = Math.max(maxLength, length);\n        }\n        \n        return maxLength;\n    }\n}","compare_result":"11111111111111111111111111111111111111111","title_slug":"longest-arithmetic-subsequence-of-given-difference","has_notes":false,"flag_type":1}