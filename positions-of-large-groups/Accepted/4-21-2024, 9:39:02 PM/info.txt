{"id":1238688549,"question_id":857,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713753542,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1238688549/","is_pending":"Not Pending","title":"Positions of Large Groups","memory":"44.5 MB","code":"import java.util.ArrayList;\nimport java.util.List;\n\nclass Solution {\n    public List<List<Integer>> largeGroupPositions(String s) {\n        List<List<Integer>> result = new ArrayList<>();\n        int start = 0;\n        for (int i = 1; i < s.length(); i++) {\n            if (s.charAt(i) != s.charAt(i - 1)) {\n                if (i - start >= 3) {\n                    List<Integer> interval = new ArrayList<>();\n                    interval.add(start);\n                    interval.add(i - 1);\n                    result.add(interval);\n                }\n                start = i;\n            }\n        }\n        // Check the last group\n        if (s.length() - start >= 3) {\n            List<Integer> interval = new ArrayList<>();\n            interval.add(start);\n            interval.add(s.length() - 1);\n            result.add(interval);\n        }\n        return result;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"positions-of-large-groups","has_notes":false,"flag_type":1}