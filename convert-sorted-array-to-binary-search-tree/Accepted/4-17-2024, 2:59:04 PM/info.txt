{"id":1235194160,"question_id":108,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713383944,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235194160/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"43.2 MB","code":"class Solution {\n    public TreeNode sortedArrayToBST(int[] nums) {\n        return constructBST(nums, 0, nums.length - 1);\n    }\n    \n    private TreeNode constructBST(int[] nums, int left, int right) {\n        if (left > right) {\n            return null; // Base case: Empty subtree.\n        }\n        int mid = left + (right - left) / 2; // Calculate middle index.\n        TreeNode root = new TreeNode(nums[mid]); // Create a new node.\n        root.left = constructBST(nums, left, mid - 1); // Recursively construct left subtree.\n        root.right = constructBST(nums, mid + 1, right); // Recursively construct right subtree.\n        return root;\n    }\n}\n","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}