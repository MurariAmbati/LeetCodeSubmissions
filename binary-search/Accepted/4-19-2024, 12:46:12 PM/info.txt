{"id":1236760426,"question_id":792,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713548772,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1236760426/","is_pending":"Not Pending","title":"Binary Search","memory":"45.4 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int left = 0;\n        int right = nums.length - 1;\n\n        while (left <= right) {\n            int mid = left + (right - left) / 2; // Avoid integer overflow\n\n            if (nums[mid] == target) {\n                return mid;\n            } else if (target < nums[mid]) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n\n        return -1;\n    }\n}\n","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"binary-search","has_notes":false,"flag_type":1}