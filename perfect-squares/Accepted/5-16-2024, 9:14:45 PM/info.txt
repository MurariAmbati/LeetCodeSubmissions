{"id":1260117945,"question_id":279,"lang":"java","lang_name":"Java","time":"2Â weeks","timestamp":1715912085,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/1260117945/","is_pending":"Not Pending","title":"Perfect Squares","memory":"42.5 MB","code":"import java.util.Arrays;\n\nclass Solution {\n    public int numSquares(int n) {\n        int[] dp = new int[n + 1];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n\n        // Base case: 0 requires 0 perfect squares.\n        dp[0] = 0;\n\n        for (int i = 1; i <= n; i++) {\n            // Try all possible perfect square numbers less than or equal to i.\n            for (int j = 1; j * j <= i; j++) {\n                dp[i] = Math.min(dp[i], dp[i - j * j] + 1);\n            }\n        }\n\n        return dp[n];\n    }\n}","compare_resulttitle_slug":"perfect-squares","has_notes":false,"flag_type":1}