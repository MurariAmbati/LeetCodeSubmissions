{"id":1235791168,"question_id":776,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713450562,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1235791168/","is_pending":"Not Pending","title":"N-ary Tree Postorder Traversal","memory":"44.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> children;\n\n    public Node() {}\n\n    public Node(int _val) {\n        val = _val;\n    }\n\n    public Node(int _val, List<Node> _children) {\n        val = _val;\n        children = _children;\n    }\n};\n*/\n\npublic class Solution {\n    public List<Integer> postorder(Node root) {\n        List<Integer> result = new ArrayList<>();\n        if (root == null) {\n            return result;\n        }\n        \n        Stack<Node> stack = new Stack<>();\n        stack.push(root);\n        \n        while (!stack.isEmpty()) {\n            Node node = stack.pop();\n            result.add(0, node.val); // Add node value at the beginning of the list to simulate postorder traversal\n            \n            // Push children onto the stack\n            for (Node child : node.children) {\n                stack.push(child);\n            }\n        }\n        \n        return result;\n    }\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"n-ary-tree-postorder-traversal","has_notes":false,"flag_type":1}