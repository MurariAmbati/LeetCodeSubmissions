{"id":1236919487,"question_id":680,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713565713,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1236919487/","is_pending":"Not Pending","title":"Valid Palindrome II","memory":"45.1 MB","code":"public class Solution {\n    public boolean validPalindrome(String s) {\n        int left = 0;\n        int right = s.length() - 1;\n        \n        while (left < right) {\n            if (s.charAt(left) != s.charAt(right)) {\n                // Try deleting one character from either left or right pointer position\n                return isPalindrome(s, left + 1, right) || isPalindrome(s, left, right - 1);\n            }\n            left++;\n            right--;\n        }\n        \n        return true;\n    }\n    \n    private boolean isPalindrome(String s, int left, int right) {\n        // Check if substring s[left:right+1] is a palindrome\n        while (left < right) {\n            if (s.charAt(left) != s.charAt(right)) {\n                return false;\n            }\n            left++;\n            right--;\n        }\n        return true;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome-ii","has_notes":false,"flag_type":1}