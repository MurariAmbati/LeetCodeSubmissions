{"id":1235817078,"question_id":273,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713452763,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1235817078/","is_pending":"Not Pending","title":"Integer to English Words","memory":"N/A","code":"import java.util.HashMap;\nimport java.util.Map;\n\npublic class Solution {\n    // Define arrays for numbers, tens multiples, and powers of 10\n    private static final String[] ones = {\"\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\", \"Ten\",\n            \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"};\n    private static final String[] tens = {\"\", \"\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"};\n    private static final String[] scales = {\"\", \"Thousand\", \"Million\", \"Billion\"};\n\n    public String numberToWords(int num) {\n        if (num == 0) {\n            return \"Zero\";\n        }\n\n        StringBuilder result = new StringBuilder();\n        int i = 0;\n\n        while (num > 0) {\n            if (num % 1000 != 0) {\n                result.insert(0, helper(num % 1000) + scales[i] + \" \");\n            }\n            num /= 1000;\n            i++;\n        }\n\n        return result.toString().trim();\n    }\n\n    // Helper function to convert a three-digit number to English words\n    private String helper(int num) {\n        StringBuilder sb = new StringBuilder();\n\n        if (num >= 100) {\n            sb.append(ones[num / 100]).append(\" Hundred \");\n            num %= 100;\n        }\n\n        if (num >= 20) {\n            sb.append(tens[num / 10]).append(\" \");\n            num %= 10;\n        }\n\n        sb.append(ones[num]).append(\" \");\n\n        return sb.toString();\n    }\n}","compare_resulttitle_slug":"integer-to-english-words","has_notes":false,"flag_type":1}