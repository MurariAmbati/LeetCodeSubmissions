{"id":1241949836,"question_id":42,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1714073339,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1241949836/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"46.1 MB","code":"class Solution {\n    public int trap(int[] height) {\n        int n = height.length;\n        int[] leftMax = new int[n];\n        int[] rightMax = new int[n];\n\n        // Fill leftMax array\n        leftMax[0] = height[0];\n        for (int i = 1; i < n; i++) {\n            leftMax[i] = Math.max(leftMax[i - 1], height[i]);\n        }\n\n        // Fill rightMax array (start from the end)\n        rightMax[n - 1] = height[n - 1];\n        for (int i = n - 2; i >= 0; i--) {\n            rightMax[i] = Math.max(rightMax[i + 1], height[i]);\n        }\n\n        // Calculate trapped water for each bar\n        int water = 0;\n        for (int i = 0; i < n; i++) {\n            water += Math.min(leftMax[i], rightMax[i]) - height[i];\n        }\n\n        return water;\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}