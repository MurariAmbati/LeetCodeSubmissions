{"id":1241978484,"question_id":98,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1714076170,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1241978484/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"44.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\npublic class Solution {\n    public boolean isValidBST(TreeNode root) {\n        return isValidBST(root, null, null);\n    }\n    \n    private boolean isValidBST(TreeNode node, Integer lower, Integer upper) {\n        if (node == null) {\n            return true;\n        }\n        \n        int val = node.val;\n        if ((lower != null && val <= lower) || (upper != null && val >= upper)) {\n            return false;\n        }\n        \n        return isValidBST(node.left, lower, val) && isValidBST(node.right, val, upper);\n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}