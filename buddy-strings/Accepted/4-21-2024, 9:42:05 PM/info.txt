{"id":1238689865,"question_id":889,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713753725,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1238689865/","is_pending":"Not Pending","title":"Buddy Strings","memory":"42.3 MB","code":"import java.util.HashSet;\nimport java.util.Set;\n\nclass Solution {\n    public boolean buddyStrings(String s, String goal) {\n        // Lengths of s and goal should be equal\n        if (s.length() != goal.length()) return false;\n        \n        // If s and goal are equal, we need at least two repeating characters\n        if (s.equals(goal)) {\n            Set<Character> seen = new HashSet<>();\n            for (char ch : s.toCharArray()) {\n                if (seen.contains(ch)) {\n                    return true;\n                }\n                seen.add(ch);\n            }\n            return false;\n        }\n        \n        // Find the differences between s and goal\n        int diff1 = -1, diff2 = -1;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) != goal.charAt(i)) {\n                if (diff1 == -1) {\n                    diff1 = i;\n                } else if (diff2 == -1) {\n                    diff2 = i;\n                } else {\n                    // More than two differences found, early return false\n                    return false;\n                }\n            }\n        }\n        \n        // If there are exactly two differences, check if swapping them results in goal\n        return (diff2 != -1 && s.charAt(diff1) == goal.charAt(diff2) && s.charAt(diff2) == goal.charAt(diff1));\n    }\n\n}","compare_result":"111111111111111111111111111111111111111","title_slug":"buddy-strings","has_notes":false,"flag_type":1}