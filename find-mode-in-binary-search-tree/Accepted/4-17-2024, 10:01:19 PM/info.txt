{"id":1235376862,"question_id":501,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713409279,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1235376862/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"44.8 MB","code":"class Solution {\n    private int prevVal;\n    private int count;\n    private int maxCount;\n    private List<Integer> modes;\n\n    public int[] findMode(TreeNode root) {\n        prevVal = 0;\n        count = 0;\n        maxCount = 0;\n        modes = new ArrayList<>();\n\n        inOrderTraversal(root);\n\n        int[] result = new int[modes.size()];\n        for (int i = 0; i < modes.size(); i++) {\n            result[i] = modes.get(i);\n        }\n        return result;\n    }\n\n    private void inOrderTraversal(TreeNode node) {\n        if (node == null) return;\n\n        inOrderTraversal(node.left);\n\n        // Compare current value with previous value\n        if (node.val == prevVal) {\n            count++;\n        } else {\n            count = 1;\n            prevVal = node.val;\n        }\n\n        // Update max count and result list\n        if (count > maxCount) {\n            maxCount = count;\n            modes.clear();\n            modes.add(node.val);\n        } else if (count == maxCount) {\n            modes.add(node.val);\n        }\n\n        inOrderTraversal(node.right);\n    }\n}","compare_result":"111111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}