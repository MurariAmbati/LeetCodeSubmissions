{"id":1244396136,"question_id":733,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1714333154,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1244396136/","is_pending":"Not Pending","title":"Flood Fill","memory":"45.2 MB","code":"class Solution {\n    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {\n        int originalColor = image[sr][sc];\n        if (originalColor != newColor) {\n            dfs(image, sr, sc, originalColor, newColor);\n        }\n        return image;\n    }\n    \n    private void dfs(int[][] image, int row, int col, int originalColor, int newColor) {\n        if (row < 0 || row >= image.length || col < 0 || col >= image[0].length || image[row][col] != originalColor) {\n            return;\n        }\n        \n        image[row][col] = newColor;\n        \n        dfs(image, row + 1, col, originalColor, newColor); // down\n        dfs(image, row - 1, col, originalColor, newColor); // up\n        dfs(image, row, col + 1, originalColor, newColor); // right\n        dfs(image, row, col - 1, originalColor, newColor); // left\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"flag_type":1}