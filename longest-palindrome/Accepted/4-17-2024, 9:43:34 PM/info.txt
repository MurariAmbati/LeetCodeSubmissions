{"id":1235367971,"question_id":409,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713408214,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1235367971/","is_pending":"Not Pending","title":"Longest Palindrome","memory":"41.6 MB","code":"class Solution {\n    public int longestPalindrome(String s) {\n        int[] freq = new int[128]; // Assuming ASCII characters\n        \n        for (char c : s.toCharArray()) {\n            freq[c]++;\n        }\n        \n        int length = 0;\n        boolean oddFound = false;\n        \n        for (int f : freq) {\n            length += f / 2 * 2;\n            if (f % 2 == 1) {\n                oddFound = true;\n            }\n        }\n        \n        return oddFound ? length + 1 : length;\n    }\n\n}\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindrome","has_notes":false,"flag_type":1}