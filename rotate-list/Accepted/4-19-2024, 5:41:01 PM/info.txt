{"id":1236923677,"question_id":61,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1713566461,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1236923677/","is_pending":"Not Pending","title":"Rotate List","memory":"42.1 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\npublic class Solution {\n    public ListNode rotateRight(ListNode head, int k) {\n        if (head == null || k == 0) {\n            return head;\n        }\n        \n        // Step 1: Find the length of the linked list\n        int length = 1;\n        ListNode current = head;\n        while (current.next != null) {\n            current = current.next;\n            length++;\n        }\n        \n        // Step 2: Calculate the effective rotation amount\n        int effectiveRotation = k % length;\n        if (effectiveRotation == 0) {\n            return head;\n        }\n        \n        // Step 3: Find the (length - k)th node from the beginning\n        ListNode newTail = head;\n        for (int i = 0; i < length - effectiveRotation - 1; i++) {\n            newTail = newTail.next;\n        }\n        \n        // Step 4: Adjust the pointers to rotate the list\n        ListNode newHead = newTail.next;\n        newTail.next = null; // Set the new tail's next pointer to null\n        current.next = head; // Connect the original tail to the original head\n        \n        // Step 5: Return the new head of the rotated list\n        return newHead;\n    }\n\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list","has_notes":false,"flag_type":1}