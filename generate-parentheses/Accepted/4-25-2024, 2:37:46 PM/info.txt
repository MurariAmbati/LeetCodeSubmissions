{"id":1241955672,"question_id":22,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1714073866,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1241955672/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"42.8 MB","code":"public class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<String> result = new ArrayList<>();\n        backtrack(result, \"\", 0, 0, n);\n        return result;\n    }\n\n    private void backtrack(List<String> result, String current, int open, int close, int max) {\n        if (current.length() == max * 2) {\n            result.add(current);\n            return;\n        }\n\n        if (open < max) {\n            backtrack(result, current + \"(\", open + 1, close, max);\n        }\n\n        if (close < open) {\n            backtrack(result, current + \")\", open, close + 1, max);\n        }\n    }\n}\n","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}